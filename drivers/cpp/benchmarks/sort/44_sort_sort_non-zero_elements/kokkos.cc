// Driver for 44_sort_sort_non-zero_elements for Kokkos
// #include <Kokkos_Core.hpp>
// 
// /* Sort the array x in ascending order ignoring elements with value 0.
//    Leave zero valued elements in-place. 
// 	 Use Kokkos to sort in parallel. Assume Kokkos has already been initialized.
//    Example:
// 
//    input: [8, 4, 0, 9, 8, 0, 1, -1, 7]
//    output: [-1, 1, 0, 4, 7, 0, 8, 8, 9]
// */
// void sortIgnoreZero(Kokkos::View<int*> &x) {

#include <algorithm>
#include <numeric>
#include <random>
#include <vector>

#include <Kokkos_Core.hpp>
#include <Kokkos_Sort.hpp>

#include "baseline.hpp"
#include "utilities.hpp"
#include "generated-code.hpp"   // code generated by LLM

struct Context {

};

void reset(Context *ctx) {

}

Context *init() {
    Context *ctx = new Context();



    reset(ctx);
    return ctx;
}

void compute(Context *ctx) {

}

void best(Context *ctx) {

}

bool validate(Context *ctx) {
    const size_t TEST_SIZE = 1024;

    const size_t numTries = 5;
    for (int trialIter = 0; trialIter < numTries; trialIter += 1) {
        // set up input

        // compute correct result

        // compute test result
        
        if () {
            return false;
        }
    }

    return true;
}

void destroy(Context *ctx) {
    delete ctx;
}
