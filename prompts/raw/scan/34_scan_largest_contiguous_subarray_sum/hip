/* Compute the largest sum of any contiguous subarray in the vector x.
   i.e. if x=[−2, 1, −3, 4, −1, 2, 1, −5, 4] then [4, −1, 2, 1] is the contiguous
   subarray with the largest sum of 6.
   Store the result in sum.
   Use AMD HIP to compute in parallel. The kernel is launched with at least as many threads as values in x.
   Example:

   input: [−2, 1, −3, 4, −1, 2, 1, −5, 4]
   output: 6
*/
__global__ void maximumSubarray(const int *x, size_t N, int *sum) {