struct COOElement {
   size_t row, column;
   double value;
};

/* Compute the matrix multiplication Y=AX. A is a sparse MxK matrix in COO format with sizeA elements.
   X is a sparse KxN matrix in COO format with sizeX elements. Y is a dense MxN matrix in row-major.
   Use CUDA to compute in parallel. The kernel is launched with at least sizeA threads.
   Example:

   input: A=[{0,0,-2}, {0,1,1}, {1,1,-1}] X=[{0,1,2}, {1,0,-1}]
   output: Y=[{-1,-4}, {1,0}]
*/
__global__ void spmm(const COOElement *A, size_t sizeA, const COOElement *X, size_t sizeX, double *Y, size_t M, size_t K, size_t N) {