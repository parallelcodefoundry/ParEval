/* Compute the number of vertices in the largest component of the undirected graph defined by the adjacency matrix A.
   Store the result in largestComponentSize.
   A is an NxN adjacency matrix stored in row-major. A is an undirected graph.
   Use CUDA to compute in parallel. The kernel is launched on an NxN grid of threads.
   Example:

	 input: [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 1, 0]]
   output: 2
*/
__global__ void largestComponent(const int *A, size_t N, int *largestComponentSize) {