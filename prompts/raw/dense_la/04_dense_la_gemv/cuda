/* Multiply the matrix A by the vector x. Store the results in the vector y.
   A is an MxN matrix stored in row-major, x has N elements, and y has M elements.
   Use CUDA to compute in parallel. The kernel is launched with at least M threads.
   Example:

   input: A=[[1, -1, 2], [0, -3, 1]] x=[2, 1, 0]
   output: y=[1, -3]
*/
__global__ void gemv(const double *A, const double *x, double *y, size_t M, size_t N) {