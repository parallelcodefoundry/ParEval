/* Multiply the matrix A by the vector x. Store the results in the vector y.
   A is an MxN matrix stored in row-major, x has N elements, and y has M elements.
   Use MPI to compute in parallel. Assume MPI has already been initialized.
   Every rank has a complete copy of A and x. Store the result in y on rank 0.
   Example:

   input: A=[[1, -1, 2], [0, -3, 1]] x=[2, 1, 0]
   output: y=[1, -3]
*/
void gemv(std::vector<double> const& A, std::vector<double> const& x, std::vector<double> &y, size_t M, size_t N) {