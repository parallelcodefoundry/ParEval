/* Multiply the matrix A by the matrix B. Store the results in the matrix C.
   A is an MxK matrix, B is a KxN matrix, and C is a MxN matrix. The matrices are stored in row-major.
   Use MPI and OpenMP to compute in parallel. Assume MPI has already been initialized.
   Every rank has a complete copy of A and B. Store the result in C on rank 0.
   Example:

   input: A=[[1, -1, 2], [0, -2, 1]] B=[[4, 1], [-1, 0], [2, 2]]
   output: C=[[9, 5], [4, 2]]
*/
void gemm(std::vector<double> const& A, std::vector<double> const& B, std::vector<double> &C, size_t M, size_t K, size_t N) {